plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}


tasks.named('test') {
    useJUnitPlatform()
    reports {
        junitXml.required.set(false) // Disable XML report generation
        html.required.set(false)      // Optionally enable HTML reports for viewing in a browser
    }
}

tasks.named("javadoc") {
    destinationDir = file("$buildDir/docs/javadoc") // Dove salvare la documentazione
    options.memberLevel = JavadocMemberLevel.PROTECTED // Per documentare anche i membri protected
    options.encoding = 'UTF-8' // Encoding per i caratteri speciali
    options.addStringOption('Xdoclint:none', '-quiet') // Disabilita avvisi di formattazione
}
